{
  var f: Nil or Fn<<>, Nil> = nil;

  {
    var a = "a";
    fn f_() { std_println(a); }
    f = f_;
  }

  {
    # Since a is out of scope, the local slot will be reused by b. Make sure
    # that f still closes over a.
    var b = "b";
    (f as Fn<<>, Nil>)(); # expect: a
  }
}
